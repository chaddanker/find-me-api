    type Query {
        info: String!
        scorelist(filter: String, skip: Int, take: Int, orderBy: ScoreOrderByInput): ScoreList!
        score(id: ID!): Score!
    }

    type Mutation {
        newscore(email: String!, name: String!, score: Int!): Score!
        updatescore(id: ID!, email: String!, name: String!, score: Int!): Score
        deletescore(id: ID!): Score
    }

    type ScoreList {
        scores: [Score!]!
        count: Int!
    }

    type Score {
        id: ID!
        name: String!
        email: String!
        score: Int!
    }

    input ScoreOrderByInput {
        email: Sort
        name: Sort
        score: Sort
    }

    enum Sort {
        asc
        dec
    }